// Mocks generated by Mockito 5.0.13 from annotations
// in search_calculate/test/results/presentation/cubit/results_cubit_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:search_calculate/results/domain/usecases/add_to_watchlist.dart'
    as _i3;
import 'package:search_calculate/results/domain/usecases/calculate_5_year_avg_fair_value.dart'
    as _i7;
import 'package:search_calculate/results/domain/usecases/calculate_year_by_year_fair_value.dart'
    as _i8;
import 'package:search_calculate/results/domain/usecases/remove_from_watchlist.dart'
    as _i6;
import 'package:search_calculate/watchlist/domain/entities/watchlist_item.dart'
    as _i5;
import 'package:search_calculate/watchlist/domain/repositories/watchlist_repository_contract.dart'
    as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeWatchlistRespoitoryContract extends _i1.Fake
    implements _i2.WatchlistRespoitoryContract {}

/// A class which mocks [AddToWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddToWatchlist extends _i1.Mock implements _i3.AddToWatchlist {
  MockAddToWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.WatchlistRespoitoryContract get watchlistRepositoryContract =>
      (super.noSuchMethod(Invocation.getter(#watchlistRepositoryContract),
              returnValue: _FakeWatchlistRespoitoryContract())
          as _i2.WatchlistRespoitoryContract);
  @override
  _i4.Future<dynamic> call(_i5.WatchlistItem? watchlistItem) =>
      (super.noSuchMethod(Invocation.method(#call, [watchlistItem]),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [RemoveFromWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveFromWatchlist extends _i1.Mock
    implements _i6.RemoveFromWatchlist {
  MockRemoveFromWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.WatchlistRespoitoryContract get watchlistRepositoryContract =>
      (super.noSuchMethod(Invocation.getter(#watchlistRepositoryContract),
              returnValue: _FakeWatchlistRespoitoryContract())
          as _i2.WatchlistRespoitoryContract);
  @override
  _i4.Future<dynamic> call(_i5.WatchlistItem? watchlistItem) =>
      (super.noSuchMethod(Invocation.method(#call, [watchlistItem]),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [Calculate5YearAvgFairValue].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalculate5YearAvgFairValue extends _i1.Mock
    implements _i7.Calculate5YearAvgFairValue {
  MockCalculate5YearAvgFairValue() {
    _i1.throwOnMissingStub(this);
  }

  @override
  double call(_i5.WatchlistItem? watchlistItem) =>
      (super.noSuchMethod(Invocation.method(#call, [watchlistItem]),
          returnValue: 0.0) as double);
  @override
  String toString() => super.toString();
}

/// A class which mocks [CalculateYearByYearFairValue].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalculateYearByYearFairValue extends _i1.Mock
    implements _i8.CalculateYearByYearFairValue {
  MockCalculateYearByYearFairValue() {
    _i1.throwOnMissingStub(this);
  }

  @override
  double call(_i5.WatchlistItem? watchlistItem) =>
      (super.noSuchMethod(Invocation.method(#call, [watchlistItem]),
          returnValue: 0.0) as double);
  @override
  String toString() => super.toString();
}
